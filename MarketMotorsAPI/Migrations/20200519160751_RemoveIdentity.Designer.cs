// <auto-generated />
using System;
using MarketMotors.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarketMotors.Migrations
{
    [DbContext(typeof(MarketMotorsContext))]
    [Migration("20200519160751_RemoveIdentity")]
    partial class RemoveIdentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MarketMotors.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("MarketMotors.Models.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("PowerLocks");

                    b.Property<bool>("PowerWindows");

                    b.Property<int>("VehicleId");

                    b.HasKey("FeatureId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("MarketMotors.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Availability");

                    b.Property<string>("Condition");

                    b.Property<string>("Doors");

                    b.Property<string>("Engine");

                    b.Property<string>("ExteriorColor");

                    b.Property<string>("FuelType");

                    b.Property<string>("InteriorColor");

                    b.Property<string>("Make");

                    b.Property<string>("Mileage");

                    b.Property<string>("Model");

                    b.Property<string>("Price");

                    b.Property<string>("StockNumber")
                        .HasMaxLength(4);

                    b.Property<string>("Transmission");

                    b.Property<string>("UserId");

                    b.Property<string>("VehicleTitle");

                    b.Property<string>("Vin")
                        .HasMaxLength(17);

                    b.Property<int>("Year");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("MarketMotors.Models.Feature", b =>
                {
                    b.HasOne("MarketMotors.Models.Vehicle", "Vehicle")
                        .WithMany("Features")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MarketMotors.Models.Vehicle", b =>
                {
                    b.HasOne("MarketMotors.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
