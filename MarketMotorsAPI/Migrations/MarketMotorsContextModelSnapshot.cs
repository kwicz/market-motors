// <auto-generated />
using System;
using MarketMotors.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarketMotors.Migrations
{
    [DbContext(typeof(MarketMotorsContext))]
    partial class MarketMotorsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MarketMotors.Models.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("PowerLocks");

                    b.Property<bool>("PowerWindows");

                    b.Property<int>("VehicleId");

                    b.HasKey("FeatureId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("MarketMotors.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("ImageData");

                    b.Property<string>("ImageTitle");

                    b.Property<int>("VehicleId");

                    b.HasKey("ImageId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("MarketMotors.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Availability");

                    b.Property<string>("Condition");

                    b.Property<string>("Doors");

                    b.Property<string>("Engine");

                    b.Property<string>("ExteriorColor");

                    b.Property<string>("Featured");

                    b.Property<string>("FuelType");

                    b.Property<string>("InteriorColor");

                    b.Property<string>("Make");

                    b.Property<string>("Mileage");

                    b.Property<string>("Model");

                    b.Property<string>("Price");

                    b.Property<string>("StockNumber");

                    b.Property<string>("Transmission");

                    b.Property<string>("VehicleTitle");

                    b.Property<string>("Vin");

                    b.Property<string>("Year");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            Availability = "Available",
                            Condition = "Good",
                            Doors = "3",
                            Engine = "V8",
                            ExteriorColor = "Taupe",
                            Featured = "true",
                            FuelType = "Gasoline",
                            InteriorColor = "Taupe",
                            Make = "Chevy",
                            Mileage = "100,000",
                            Model = "Model",
                            Price = "2,000",
                            StockNumber = "1655",
                            Transmission = "Automatic",
                            VehicleTitle = "1998 Chevy S10",
                            Vin = "79879851655",
                            Year = "1998"
                        },
                        new
                        {
                            VehicleId = 2,
                            Availability = "Available",
                            Condition = "Like New",
                            Doors = "4",
                            Engine = "4 Cylinder",
                            ExteriorColor = "Red",
                            Featured = "true",
                            FuelType = "Gasoline",
                            InteriorColor = "Black",
                            Make = "Honda",
                            Mileage = "80,000",
                            Model = "Fit",
                            Price = "6,000",
                            StockNumber = "5432",
                            Transmission = "Manual",
                            VehicleTitle = "2006 Honda Fit",
                            Vin = "98765432198765432",
                            Year = "2006"
                        },
                        new
                        {
                            VehicleId = 3,
                            Availability = "Available",
                            Condition = "Like New",
                            Doors = "4",
                            Engine = "6 Cylinder",
                            ExteriorColor = "Silver",
                            Featured = "true",
                            FuelType = "Gasoline",
                            InteriorColor = "Black",
                            Make = "Subaru",
                            Mileage = "100,000",
                            Model = "Outback",
                            Price = "6,000",
                            StockNumber = "5678",
                            Transmission = "Automatic",
                            VehicleTitle = "2016 Subaru Outback",
                            Vin = "12345678912345678",
                            Year = "2016"
                        });
                });

            modelBuilder.Entity("MarketMotors.Models.Feature", b =>
                {
                    b.HasOne("MarketMotors.Models.Vehicle", "Vehicle")
                        .WithMany("Features")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MarketMotors.Models.Image", b =>
                {
                    b.HasOne("MarketMotors.Models.Vehicle", "Vehicle")
                        .WithMany("Images")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
